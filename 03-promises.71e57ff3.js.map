{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZMO,SAASC,cAAc,QAC/BC,iBAAiB,UAetB,SAAsBC,GACpBA,EAAMC,iBAKN,IAJA,IAAMC,EAASC,SAASH,EAAMI,OAAOC,SAASH,OAAOI,OAC/CC,EAAQJ,SAASH,EAAMI,OAAOC,SAASf,MAAMgB,OAC7CE,EAAOL,SAASH,EAAMI,OAAOC,SAASG,KAAKF,OAExCG,EAAI,EAAGA,EAAIP,EAAQO,GAAK,EAAG,CAI9BrB,EAHiBqB,EACIF,EAAQE,EAAID,GAG9BE,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBJ,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBJ,EAAA0B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const amount = parseInt(event.target.elements.amount.value);\n  const delay = parseInt(event.target.elements.delay.value);\n  const step = parseInt(event.target.elements.step.value);\n  let position = 1;\n  for (let i = 0; i < amount; i += 1) {\n        const position = i;\n        const promiseDelay = delay + i * step;\n    \n        createPromise(position, promiseDelay)\n          .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","amount","parseInt","target","elements","value","delay1","step","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.71e57ff3.js.map"}